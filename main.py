from keep_alive import keep_alive
from selenium import webdriver
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.common.by import By
import time
import logging
import traceback
import requests
import html
import re
from datetime import datetime
import pytz

# --- ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶¨‡ßç‡¶Ø‡¶ï‡ßç‡¶§‡¶ø‡¶ó‡¶§ ‡¶§‡¶•‡ßç‡¶Ø ---
IVASMS_EMAIL = "niloyg822@gmail.com"
IVASMS_PASSWORD = "N81234567"
TELEGRAM_TOKEN = "7549134101:AAFtBzB1gJ1hXj18zHLVTXQvtM3gZlkOvpw"
TELEGRAM_CHAT_ID = "-1002819267399"
BOT_NAME = "NILOY OTP"
ADMIN_USER_ID = 7052442701

# --- ‡¶≤‡¶ó‡¶ø‡¶Ç ‡¶è‡¶¨‡¶Ç URL ‡¶∏‡ßá‡¶ü‡¶Ü‡¶™ ---
logging.basicConfig(level=logging.INFO, format="%(asctime)s - %(levelname)s - %(message)s")
LOGIN_URL = "https://www.ivasms.com/login"
SMS_PAGE_URL = "https://www.ivasms.com/portal/live/my_sms"

# --- ‡¶ü‡ßá‡¶≤‡¶ø‡¶ó‡ßç‡¶∞‡¶æ‡¶Æ ‡¶´‡¶æ‡¶Ç‡¶∂‡¶® ---
def send_to_telegram(message, chat_id):
    url = f"https://api.telegram.org/bot{TELEGRAM_TOKEN}/sendMessage"
    payload = {"chat_id": chat_id, "text": message, "parse_mode": "HTML", "disable_web_page_preview": True}
    try:
        response = requests.post(url, json=payload, timeout=10)
        if response.status_code == 200:
            logging.info(f"‚úÖ ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú {chat_id}-‡¶§‡ßá ‡¶™‡¶æ‡¶†‡¶æ‡¶®‡ßã ‡¶π‡ßü‡ßá‡¶õ‡ßá‡•§")
        else:
            logging.error(f"‚ùå {chat_id}-‡¶§‡ßá ‡¶™‡¶æ‡¶†‡¶æ‡¶§‡ßá ‡¶¨‡ßç‡¶Ø‡¶∞‡ßç‡¶•! ‡¶â‡¶§‡ßç‡¶§‡¶∞: {response.text}")
    except Exception as e:
        logging.error(f"‚ùå ‡¶ü‡ßá‡¶≤‡¶ø‡¶ó‡ßç‡¶∞‡¶æ‡¶Æ ‡¶™‡¶æ‡¶†‡¶æ‡¶®‡ßã‡¶∞ ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®‡ßá ‡¶§‡ßç‡¶∞‡ßÅ‡¶ü‡¶ø: {e}")

# --- ‡¶Æ‡ßÇ‡¶≤ ‡¶´‡¶æ‡¶Ç‡¶∂‡¶® (‡¶ö‡ßÇ‡ßú‡¶æ‡¶®‡ßç‡¶§ ‡¶è‡¶¨‡¶Ç ‡¶∏‡¶Æ‡ßç‡¶™‡ßÇ‡¶∞‡ßç‡¶£ ‡¶∏‡¶†‡¶ø‡¶ï ‡¶∏‡¶Ç‡¶∏‡ßç‡¶ï‡¶∞‡¶£) ---
def main():
    # --- ‚úÖ‚úÖ‚úÖ ‡¶Æ‡ßÇ‡¶≤ ‡¶è‡¶¨‡¶Ç ‡¶ö‡ßÇ‡¶°‡¶º‡¶æ‡¶®‡ßç‡¶§ ‡¶™‡¶∞‡¶ø‡¶¨‡¶∞‡ßç‡¶§‡¶®‡¶ü‡¶ø ‡¶è‡¶ñ‡¶æ‡¶®‡ßá ---
    # ‡¶™‡¶æ‡¶†‡¶æ‡¶®‡ßã ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú‡ßá‡¶∞ ‡¶è‡¶ï‡¶ü‡¶ø ‡¶§‡¶æ‡¶≤‡¶ø‡¶ï‡¶æ ‡¶Æ‡¶®‡ßá ‡¶∞‡¶æ‡¶ñ‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø
    sent_messages = set()
    driver = None
    try:
        chrome_options = Options()
        chrome_options.add_argument("--headless")
        chrome_options.add_argument("--no-sandbox")
        chrome_options.add_argument("--disable-dev-shm-usage")
        driver = webdriver.Chrome(options=chrome_options)
        
        driver.get(LOGIN_URL)
        time.sleep(3)
        driver.find_element(By.NAME, "email").send_keys(IVASMS_EMAIL)
        driver.find_element(By.NAME, "password").send_keys(IVASMS_PASSWORD)
        driver.find_element(By.TAG_NAME, "button").click()
        time.sleep(5)
        
        if "login" in driver.current_url:
            raise Exception("‡¶≤‡¶ó‡¶á‡¶® ‡¶¨‡ßç‡¶Ø‡¶∞‡ßç‡¶•‡•§")
            
        logging.info("‚úÖ‚úÖ‚úÖ ‡¶≤‡¶ó‡¶á‡¶® ‡¶∏‡¶´‡¶≤!")
        # ‡¶∂‡ßÅ‡¶ß‡ßÅ ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶°‡¶Æ‡¶ø‡¶®‡¶ï‡ßá ‡¶∏‡ßç‡¶ü‡ßç‡¶Ø‡¶æ‡¶ü‡¶æ‡¶∏ ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú ‡¶™‡¶æ‡¶†‡¶æ‡¶®‡ßã ‡¶π‡¶ö‡ßç‡¶õ‡ßá
        send_to_telegram(f"<b>{BOT_NAME} BOT</b>\nüöÄ <i>‡¶¨‡¶ü ‡¶∏‡¶´‡¶≤‡¶≠‡¶æ‡¶¨‡ßá ‡¶ö‡¶æ‡¶≤‡ßÅ ‡¶π‡ßü‡ßá‡¶õ‡ßá ‡¶è‡¶¨‡¶Ç ‡¶ï‡¶æ‡¶ú ‡¶ï‡¶∞‡¶õ‡ßá!</i>", ADMIN_USER_ID)
        
        driver.get(SMS_PAGE_URL)
        logging.info(f"üëÄ {SMS_PAGE_URL} ‡¶™‡ßá‡¶ú‡¶ü‡¶ø ‡¶™‡¶∞‡ßç‡¶Ø‡¶¨‡ßá‡¶ï‡ßç‡¶∑‡¶£ ‡¶ï‡¶∞‡¶æ ‡¶π‡¶ö‡ßç‡¶õ‡ßá...")
        
        while True:
            try:
                all_rows = driver.find_elements(By.CSS_SELECTOR, "tbody > tr")
                
                # ‡¶ü‡ßá‡¶¨‡¶ø‡¶≤‡¶ü‡¶ø ‡¶â‡¶≤‡ßç‡¶ü‡ßã ‡¶ï‡¶∞‡ßá ‡¶™‡ßú‡¶æ ‡¶π‡¶ö‡ßç‡¶õ‡ßá, ‡¶Ø‡¶æ‡¶§‡ßá ‡¶®‡¶§‡ßÅ‡¶® ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú ‡¶Ü‡¶ó‡ßá ‡¶™‡¶æ‡¶ì‡ßü‡¶æ ‡¶Ø‡¶æ‡ßü
                for row in reversed(all_rows):
                    cells = row.find_elements(By.TAG_NAME, "td")
                    
                    if len(cells) >= 5:
                        number_details = cells[0].text.strip().split('\n')
                        number = number_details[1] if len(number_details) > 1 else "N/A"
                        service_name = cells[1].text.strip()
                        message_content = cells[4].text.strip()
                        
                        # --- ‚úÖ‚úÖ‚úÖ ‡¶°‡ßÅ‡¶™‡ßç‡¶≤‡¶ø‡¶ï‡ßá‡¶ü ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú ‡¶™‡¶æ‡¶†‡¶æ‡¶®‡ßã‡¶∞ ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶∏‡¶Æ‡¶æ‡¶ß‡¶æ‡¶® ---
                        # ‡¶Ø‡¶¶‡¶ø ‡¶è‡¶á ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú‡¶ü‡¶ø ‡¶Ü‡¶ó‡ßá ‡¶®‡¶æ ‡¶™‡¶æ‡¶†‡¶æ‡¶®‡ßã ‡¶π‡ßü‡ßá ‡¶•‡¶æ‡¶ï‡ßá
                        if message_content and message_content not in sent_messages:
                            logging.info(f"üÜï ‡¶®‡¶§‡ßÅ‡¶® ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú ‡¶∂‡¶®‡¶æ‡¶ï‡ßç‡¶§ ‡¶π‡ßü‡ßá‡¶õ‡ßá: {message_content}")
                            
                            otp_code_match = re.search(r'\b\d{4,8}\b', message_content)
                            otp_code = otp_code_match.group(0) if otp_code_match else "N/A"
                            
                            tz = pytz.timezone('Asia/Dhaka')
                            current_time = datetime.now(tz).strftime('%d/%m/%Y, %H:%M:%S')

                            escaped_message = html.escape(message_content)
                            
                            formatted_msg = (
                                f"{BOT_NAME}\n"
                                f"‚ú® <b>OTP Received</b> ‚ú®\n\n"
                                f"‚è∞ <b>Time:</b> {current_time}\n"
                                f"üìû <b>Number:</b> {number}\n"
                                f"üîß <b>Service:</b> {service_name}\n"
                                f"üîë <b>OTP Code:</b> <code>{otp_code}</code>\n\n"
                                f"<blockquote>{escaped_message}</blockquote>"
                            )
                            
                            # OTP ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú‡¶ü‡¶ø ‡¶Æ‡ßÇ‡¶≤ ‡¶ó‡ßç‡¶∞‡ßÅ‡¶™‡ßá ‡¶™‡¶æ‡¶†‡¶æ‡¶®‡ßã ‡¶π‡¶ö‡ßç‡¶õ‡ßá
                            send_to_telegram(formatted_msg, TELEGRAM_CHAT_ID)
                            # ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú‡¶ü‡¶ø‡¶ï‡ßá ‡¶™‡¶æ‡¶†‡¶æ‡¶®‡ßã ‡¶π‡ßü‡ßá‡¶õ‡ßá ‡¶¨‡¶≤‡ßá ‡¶ö‡¶ø‡¶π‡ßç‡¶®‡¶ø‡¶§ ‡¶ï‡¶∞‡¶æ
                            sent_messages.add(message_content) 
                            time.sleep(0.5) 
            except Exception:
                pass
            
            time.sleep(2)

    except Exception as e:
        error_details = traceback.format_exc()
        shutdown_message = f"<b>{BOT_NAME} BOT</b>\nüêû **‡¶¨‡¶ü ‡¶è‡¶ï‡¶ü‡¶ø ‡¶Ö‡¶™‡ßç‡¶∞‡¶§‡ßç‡¶Ø‡¶æ‡¶∂‡¶ø‡¶§ ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ‡ßü ‡¶™‡ßú‡ßá‡¶õ‡ßá ‡¶è‡¶¨‡¶Ç ‡¶¨‡¶®‡ßç‡¶ß ‡¶π‡ßü‡ßá ‡¶Ø‡¶æ‡¶ö‡ßç‡¶õ‡ßá!**\n\n**‡¶ï‡¶æ‡¶∞‡¶£:**\n`{e}`"
        # ‡¶¨‡¶ü ‡¶ï‡ßç‡¶∞‡ßç‡¶Ø‡¶æ‡¶∂ ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú‡¶ü‡¶ø‡¶ì ‡¶∂‡ßÅ‡¶ß‡ßÅ ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶°‡¶Æ‡¶ø‡¶®‡¶ï‡ßá ‡¶™‡¶æ‡¶†‡¶æ‡¶®‡ßã ‡¶π‡¶ö‡ßç‡¶õ‡ßá
        send_to_telegram(shutdown_message, ADMIN_USER_ID)
    finally:
        if driver:
            driver.quit()

if __name__ == "__main__":
    keep_alive()
    main()
